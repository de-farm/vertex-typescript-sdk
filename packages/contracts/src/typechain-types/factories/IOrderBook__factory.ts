/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from 'ethers';
import type { Provider } from '@ethersproject/providers';
import type { IOrderBook, IOrderBookInterface } from '../IOrderBook';

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subaccount',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'queuePos',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'int256',
        name: 'priceX18',
        type: 'int256',
      },
    ],
    name: 'CancelOrder',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subaccount',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'queuePos',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'int256',
        name: 'priceX18',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'amount',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'quoteDelta',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'fee',
        type: 'int256',
      },
    ],
    name: 'FillOrder',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subaccount',
        type: 'uint64',
      },
      {
        indexed: false,
        internalType: 'uint64',
        name: 'expiration',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'queuePos',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'int256',
        name: 'priceX18',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'amountInitial',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'amountOnBook',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'quoteDelta',
        type: 'int256',
      },
      {
        indexed: false,
        internalType: 'int256',
        name: 'fee',
        type: 'int256',
      },
    ],
    name: 'PlaceOrder',
    type: 'event',
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: 'uint64',
        name: 'subaccount',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'uint64',
        name: 'queuePos',
        type: 'uint64',
      },
      {
        indexed: true,
        internalType: 'int256',
        name: 'priceX18',
        type: 'int256',
      },
    ],
    name: 'RemoveOrder',
    type: 'event',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'subaccountId',
        type: 'uint64',
      },
    ],
    name: 'clearOrders',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'dumpFees',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getBookPricesX18',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'subaccount',
        type: 'uint64',
      },
    ],
    name: 'getCumulativeBuySellAmountsX18',
    outputs: [
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '',
        type: 'int256',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [],
    name: 'getMarket',
    outputs: [
      {
        components: [
          {
            internalType: 'uint32',
            name: 'productId',
            type: 'uint32',
          },
          {
            internalType: 'int256',
            name: 'bidX18',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'askX18',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'sizeIncrementX18',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'priceIncrementX18',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'priceX18',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'collectedFeesX18',
            type: 'int256',
          },
        ],
        internalType: 'struct IOrderBook.Market',
        name: '',
        type: 'tuple',
      },
    ],
    stateMutability: 'view',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'contract IProductEngine',
        name: '_engine',
        type: 'address',
      },
      {
        internalType: 'contract IFeeCalculator',
        name: '_fees',
        type: 'address',
      },
      {
        internalType: 'uint32',
        name: '_productId',
        type: 'uint32',
      },
      {
        internalType: 'int256',
        name: '_sizeIncrementX18',
        type: 'int256',
      },
      {
        internalType: 'int256',
        name: '_priceIncrementX18',
        type: 'int256',
      },
    ],
    name: 'initialize',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
  {
    inputs: [
      {
        internalType: 'uint64',
        name: 'subaccountId',
        type: 'uint64',
      },
      {
        components: [
          {
            internalType: 'uint64',
            name: 'expiration',
            type: 'uint64',
          },
          {
            internalType: 'int256',
            name: 'amountOrQueuePos',
            type: 'int256',
          },
          {
            internalType: 'int256',
            name: 'priceX18',
            type: 'int256',
          },
        ],
        internalType: 'struct IClearinghouse.OrderRequest[]',
        name: 'requests',
        type: 'tuple[]',
      },
    ],
    name: 'sendOrders',
    outputs: [],
    stateMutability: 'nonpayable',
    type: 'function',
  },
];

export class IOrderBook__factory {
  static readonly abi = _abi;
  static createInterface(): IOrderBookInterface {
    return new utils.Interface(_abi) as IOrderBookInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): IOrderBook {
    return new Contract(address, _abi, signerOrProvider) as IOrderBook;
  }
}
