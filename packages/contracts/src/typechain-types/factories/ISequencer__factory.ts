/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { ISequencer, ISequencerInterface } from "../ISequencer";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "getPriceX18",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTime",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_sequencer",
        type: "address",
      },
      {
        internalType: "contract IClearinghouse",
        name: "_clearinghouse",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes[]",
        name: "transactions",
        type: "bytes[]",
      },
    ],
    name: "submitTransactions",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class ISequencer__factory {
  static readonly abi = _abi;
  static createInterface(): ISequencerInterface {
    return new utils.Interface(_abi) as ISequencerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ISequencer {
    return new Contract(address, _abi, signerOrProvider) as ISequencer;
  }
}
