/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Signer, utils } from "ethers";
import type { Provider } from "@ethersproject/providers";
import type { IPerpEngine, IPerpEngineInterface } from "../IPerpEngine";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "AddProduct",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "ProductUpdate",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint64",
        name: "subaccount",
        type: "uint64",
      },
      {
        indexed: false,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
    ],
    name: "SettlePnl",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        indexed: false,
        internalType: "int256",
        name: "amountSocializedX18",
        type: "int256",
      },
    ],
    name: "SocializeProduct",
    type: "event",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "uint32",
            name: "productId",
            type: "uint32",
          },
          {
            internalType: "uint64",
            name: "subaccountId",
            type: "uint64",
          },
          {
            internalType: "int256",
            name: "amountDeltaX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "vQuoteDeltaX18",
            type: "int256",
          },
        ],
        internalType: "struct IProductEngine.ProductDelta[]",
        name: "deltas",
        type: "tuple[]",
      },
    ],
    name: "applyDeltas",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amountLpX18",
        type: "uint256",
      },
    ],
    name: "burnLp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "liquidateeId",
        type: "uint64",
      },
      {
        internalType: "uint64",
        name: "liquidatorId",
        type: "uint64",
      },
    ],
    name: "decomposeLps",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getClearinghouse",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getEngineType",
    outputs: [
      {
        internalType: "enum IProductEngine.EngineType",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "getMarkPrice",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
    ],
    name: "getOrderbook",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getProductIds",
    outputs: [
      {
        internalType: "uint32[]",
        name: "",
        type: "uint32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
    ],
    name: "getSettlementState",
    outputs: [
      {
        internalType: "int256",
        name: "availableSettleX18",
        type: "int256",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "supply",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "cumulativeFundingPerLpX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "base",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "quote",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct IPerpEngine.LpState",
        name: "lpState",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "amountX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "lastCumulativeFundingX18",
            type: "int256",
          },
        ],
        internalType: "struct IPerpEngine.LpBalance",
        name: "lpBalance",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "cumulativeFundingLongX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "cumulativeFundingShortX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "availableSettleX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "openInterestX18",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct IPerpEngine.State",
        name: "state",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "amountX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "vQuoteBalanceX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "lastCumulativeFundingX18",
            type: "int256",
          },
        ],
        internalType: "struct IPerpEngine.Balance",
        name: "balance",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
    ],
    name: "getStateAndBalance",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "cumulativeFundingLongX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "cumulativeFundingShortX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "availableSettleX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "openInterestX18",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct IPerpEngine.State",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "amountX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "vQuoteBalanceX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "lastCumulativeFundingX18",
            type: "int256",
          },
        ],
        internalType: "struct IPerpEngine.Balance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
    ],
    name: "getStatesAndBalances",
    outputs: [
      {
        components: [
          {
            internalType: "int256",
            name: "supply",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "cumulativeFundingPerLpX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "base",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "quote",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct IPerpEngine.LpState",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "amountX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "lastCumulativeFundingX18",
            type: "int256",
          },
        ],
        internalType: "struct IPerpEngine.LpBalance",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "cumulativeFundingLongX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "cumulativeFundingShortX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "availableSettleX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "openInterestX18",
            type: "int256",
          },
          {
            internalType: "uint256",
            name: "lastUpdateTime",
            type: "uint256",
          },
        ],
        internalType: "struct IPerpEngine.State",
        name: "",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "int256",
            name: "amountX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "vQuoteBalanceX18",
            type: "int256",
          },
          {
            internalType: "int256",
            name: "lastCumulativeFundingX18",
            type: "int256",
          },
        ],
        internalType: "struct IPerpEngine.Balance",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_clearinghouse",
        type: "address",
      },
      {
        internalType: "address",
        name: "_quote",
        type: "address",
      },
      {
        internalType: "address",
        name: "_endpoint",
        type: "address",
      },
      {
        internalType: "address",
        name: "_admin",
        type: "address",
      },
      {
        internalType: "address",
        name: "_fees",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
      {
        internalType: "uint256",
        name: "amountBaseX18",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "amountQuoteX18",
        type: "uint256",
      },
    ],
    name: "mintLp",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
    ],
    name: "settlePnl",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
      {
        internalType: "int256",
        name: "insuranceX18",
        type: "int256",
      },
    ],
    name: "socializeSubaccount",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint32",
        name: "productId",
        type: "uint32",
      },
      {
        internalType: "uint64",
        name: "subaccountId",
        type: "uint64",
      },
      {
        internalType: "int256",
        name: "amount",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "priceX18",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "sizeIncrement",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "lpSpreadX18",
        type: "int256",
      },
    ],
    name: "swapLp",
    outputs: [
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
      {
        internalType: "int256",
        name: "",
        type: "int256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
];

export class IPerpEngine__factory {
  static readonly abi = _abi;
  static createInterface(): IPerpEngineInterface {
    return new utils.Interface(_abi) as IPerpEngineInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPerpEngine {
    return new Contract(address, _abi, signerOrProvider) as IPerpEngine;
  }
}
